# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import raft_pb2 as raft__pb2


class RaftServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RequestVote = channel.unary_unary(
        '/raft.RaftServer/RequestVote',
        request_serializer=raft__pb2.RequestVoteRequest.SerializeToString,
        response_deserializer=raft__pb2.RequestVoteResponse.FromString,
        )
    self.AppendEntries = channel.unary_unary(
        '/raft.RaftServer/AppendEntries',
        request_serializer=raft__pb2.AppendEntriesRequest.SerializeToString,
        response_deserializer=raft__pb2.AppendEntriesResponse.FromString,
        )
    self.ClientAppend = channel.unary_unary(
        '/raft.RaftServer/ClientAppend',
        request_serializer=raft__pb2.ClientAppendRequest.SerializeToString,
        response_deserializer=raft__pb2.ClientAppendResponse.FromString,
        )
    self.ClientRequestIndex = channel.unary_unary(
        '/raft.RaftServer/ClientRequestIndex',
        request_serializer=raft__pb2.ClientRequestIndexRequest.SerializeToString,
        response_deserializer=raft__pb2.ClientRequestIndexResponse.FromString,
        )


class RaftServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RequestVote(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AppendEntries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClientAppend(self, request, context):
    """these next two RPCs are sent from client to the leader
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClientRequestIndex(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RaftServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RequestVote': grpc.unary_unary_rpc_method_handler(
          servicer.RequestVote,
          request_deserializer=raft__pb2.RequestVoteRequest.FromString,
          response_serializer=raft__pb2.RequestVoteResponse.SerializeToString,
      ),
      'AppendEntries': grpc.unary_unary_rpc_method_handler(
          servicer.AppendEntries,
          request_deserializer=raft__pb2.AppendEntriesRequest.FromString,
          response_serializer=raft__pb2.AppendEntriesResponse.SerializeToString,
      ),
      'ClientAppend': grpc.unary_unary_rpc_method_handler(
          servicer.ClientAppend,
          request_deserializer=raft__pb2.ClientAppendRequest.FromString,
          response_serializer=raft__pb2.ClientAppendResponse.SerializeToString,
      ),
      'ClientRequestIndex': grpc.unary_unary_rpc_method_handler(
          servicer.ClientRequestIndex,
          request_deserializer=raft__pb2.ClientRequestIndexRequest.FromString,
          response_serializer=raft__pb2.ClientRequestIndexResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'raft.RaftServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
